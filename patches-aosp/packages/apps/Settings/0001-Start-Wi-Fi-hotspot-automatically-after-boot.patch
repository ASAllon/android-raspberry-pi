From 3ba75fd5512c706f5a72df3915509b046bd92d18 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20Gapin=CC=81ski?= <mike@gapinski.eu>
Date: Mon, 4 Jul 2022 01:54:17 +0200
Subject: [PATCH 1/8] Start Wi-Fi hotspot automatically after boot
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change-Id: I6c51a818c9f23271208bb4579c9c2e1e50df8f23
Signed-off-by: Michał Gapiński <mike@gapinski.eu>
---
 AndroidManifest.xml                           |  9 +++
 .../wifi/tether/BootHotspotReceiver.java      | 57 +++++++++++++++++++
 2 files changed, 66 insertions(+)
 create mode 100644 src/com/android/settings/wifi/tether/BootHotspotReceiver.java

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 6d2c636ccf..36d94bf9dc 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -4543,5 +4543,14 @@
         </activity>
 
         <!-- This is the longest AndroidManifest.xml ever. -->
+        
+        
+        <!-- WTF! Hold my beer :D -->
+        <receiver android:name=".wifi.tether.BootHotspotReceiver"
+        	android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.BOOT_COMPLETED"/>
+            </intent-filter>
+        </receiver>
     </application>
 </manifest>
diff --git a/src/com/android/settings/wifi/tether/BootHotspotReceiver.java b/src/com/android/settings/wifi/tether/BootHotspotReceiver.java
new file mode 100644
index 0000000000..088f7d1740
--- /dev/null
+++ b/src/com/android/settings/wifi/tether/BootHotspotReceiver.java
@@ -0,0 +1,57 @@
+/*
+ * Copyright (C) 2022 Tesla Android Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.wifi.tether;
+
+import static android.net.ConnectivityManager.TETHERING_WIFI;
+
+import android.net.ConnectivityManager;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.util.Log;
+import android.os.Handler;
+import android.os.HandlerExecutor;
+import android.os.Looper;
+import com.google.common.annotations.VisibleForTesting;
+
+public class BootHotspotReceiver extends BroadcastReceiver {  
+  
+    private static final String TAG = "BootHotspotReceiver";  
+  
+    @VisibleForTesting  
+    final ConnectivityManager.OnStartTetheringCallback mOnStartTetheringCallback =  
+            new ConnectivityManager.OnStartTetheringCallback() {  
+                @Override  
+                public void onTetheringFailed() {  
+                    super.onTetheringFailed();  
+                }  
+            };  
+  
+    @Override  
+    public void onReceive(Context context, Intent intent) {  
+  
+        if (Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())) {  
+            Log.d(TAG,"BootHotspotReceiver");  
+  
+            ConnectivityManager mConnectivityManager =  
+                    (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);  
+            mConnectivityManager.startTethering(TETHERING_WIFI, true/* showProvisioningUi */,  
+                    mOnStartTetheringCallback, new Handler(Looper.getMainLooper()));  
+        }  
+    }  
+  
+}  
\ No newline at end of file
-- 
2.34.1

